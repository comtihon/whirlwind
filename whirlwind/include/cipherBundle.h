/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_cipher_whirlwind_CipherBundle */

#ifndef _Included_com_cipher_whirlwind_CipherBundle
#define _Included_com_cipher_whirlwind_CipherBundle
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_cipher_whirlwind_CipherBundle
 * Method:    init
 * Signature: (JIII)J
 */
JNIEXPORT jlong JNICALL Java_com_cipher_whirlwind_CipherBundle_init
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_cipher_whirlwind_CipherBundle
 * Method:    cryptString
 * Signature: (JLjava/lang/String;J[J)Ljava/lang/String;
 */
JNIEXPORT jint JNICALL Java_com_cipher_whirlwind_CipherBundle_cryptString
  (JNIEnv *, jclass, jlong, jstring, jlong, jlongArray);

/*
 * Class:     com_cipher_whirlwind_CipherBundle
 * Method:    freeMemory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_cipher_whirlwind_CipherBundle_freeMemory
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_cipher_whirlwind_CipherBundle
 * Method:    freeMemory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_cipher_whirlwind_CipherBundle_freeMemory
  (JNIEnv *, jclass, jlong);


#ifdef __cplusplus
}
#endif
#endif
